// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())                 // Unique identifier for the user, auto-generated UUID
  clerkUserId String @unique                     // Unique identifier for the user from an external service (e.g., Clerk)
  email String @unique                           // User's email, must be unique
  name String?                                   // User's name, optional field
  imageUrl String?                               // URL to the user's profile image, optional field
  createdAt DateTime @default(now())             // Timestamp of user creation, auto-set to current date and time
  updatedAt DateTime @updatedAt                  // Timestamp of last user update, auto-updated whenever the user is modified
  transactions Transaction[]                     // One-to-many relationship with the Transaction model
}

model Transaction {
  id String @id @default(uuid())                        // Unique identifier for the transaction, auto-generated UUID
  text String                                           // Description or text related to the transaction
  amount Float                                          // Amount of the transaction
  // Relation to User
  userId String                                         // Foreign key referencing the User model's clerkUserId
  user User @relation(fields: [userId], references: [clerkUserId], onDelete: Cascade) // Relation to User model
  createdAt DateTime @default(now())                    // Timestamp of transaction creation, auto-set to current date and time
  @@index([userId])                                     // Index on userId for faster querying
}
